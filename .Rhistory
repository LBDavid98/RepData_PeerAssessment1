library("codetools", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages(c("manipulate", "RCurl"))
source('E:/R/BestInState.R')
best("CA", "heart attack")
source('E:/R/BestInState.R')
source('E:/R/BestInState.R')
source('E:/R/BestInState.R')
debugSource('E:/R/BestInState.R')
check("CA", "heart attack")
best("CA", "heart attack")
debugSource('E:/R/BestInState.R')
debugSource('E:/R/BestInState.R')
best("CA", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
source('E:/R/BestInState.R')
best("TX", "heart attack")
data <- read.csv("outcome-of-care-measures.csv")
hospitals <- split(data, data$state)
str(data)
?split
split(data$State)
n <- 10
nn <- 100
g <- factor(round(n * runif(n * nn)))
g
x M- rnorm(n * nn) + sqrt(as.numeric(g))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
x
xg <- split(x, g)
xg
g
x
boxplot(xg, col ="lavender", notch = TRUE, varwidth = TRUE)
datasets(airquality)
dataset(airquality)
load(airquality)
load(datasets)
g <- airquality$Month
g
1 split(airquality, g)
l <- split(airquality, g)
l
split(data, State)
split(data, data$State)
stateSplit <- split(data, data$State)
str(stateSplit)
stateSplit <- subset(stateSplit$State=="CA")
??subset
z <- rep(c(1,0,1,1,0), 5)
z
n <- length(z)
n
k <- 3
k2 <- k /2
k2
sm <- sum(x[1:k])
sm
x[1:k]
sm <- sum(z[1:k])
sm
if(sm > k2) pred[1] <- 1 else pred[1] <- 0
pred <- vector(length=n-k)
pred
length(pred)
if(sm > k2) pred[1] <- 1 else pred[1] <- 0
pred
if (n-k) > 2 {}
if (n-k >= 2) {}
if (n-k >=2) { for (i in 2:(n-k)) { sm <- sm + x[i+k-1] - x[i-1]; if (sm >= k2) pred[i] <- 1 else pred[i] <- 0 } }
pred
if (n-k >=2) { for (i in 2:(n-k)) { sm <- sm + z[i+k-1] - z[i-1]; if (sm >= k2) pred[i] <- 1 else pred[i] <- 0 } }
pred
mean(abs(pred-z[(k+1):n]))
remove(list = ls())
z <- 4, 3, 5, 9
z <- c(4,3,5,9)
x <- c(1,10)
z > x
w <- function(x) return(x+1)
w(z)
sqrt(z)
z <- c(5, 2, -3, 8)
x <- z * z > 8
x
z[x]
x <- z * z > c(3, 8)
x
x <- z * z > c(1, 3)
x
z[x]
y <- which(z*z > 8)
y
z[y]
z[y] <- 0
z
subset(z, z>0)
z
z <- subset(z, z > 0)
remove(list = ls())
clear()
cl()
cls()
z <- c(14,96,22, 9)
y <- c(16, 6)
z
y
sum(z)
sum(y)
z
y
z + y
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
doc
rootNode <- xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231) # 127
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
load(xml)
load(XML)
load_library(xml)
library(xml)
library(XML)
library("XML")
library(XML)
library('XML')
library("XML")
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
library(rhdf5)
biocLite("rhdf5")
library(rhdf5)
created = h5createFile('example.h5')
created
source('E:/R/GitHubAPI.R')
install.packages("httpuv")
source('E:/R/GitHubAPI.R')
source('E:/R/GitHubAPI.R')
load.packages("httr")
install.packages("httr")
source('E:/R/GitHubAPI.R')
library(httr)
source('E:/R/GitHubAPI.R')
library(nmle)
install.packages("nmle")
library(nlme)
library(lattice)
xplot(wight ~ Time, Bodyweight)
xyplot(wight ~ Time, Bodyweight)
xyplot(wight ~ Time | Diet, Bodyweight)
data <- read.csv("activity.csv")
dir()
setwd("..")
dir()
setwd("./R/Research")
setwd("Proj1")
dir()
data <- read.csv("activity.csv")
str(data)
header(data, 5)
head(data, 5)
data$month <- as.numeric(format(data$date, "%m"))
data$month <- as.numeric(format(data$date, "%m"))
data <- read.csv("activit.csv", colClasses = c("integer", "Date", "factor"))
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
noNA <- na.omit(data)
noNA
head(noNA)
dim(noNA)
rownames(noNA) 1:nrow(noNA)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
?hist
hist(data$steps, breaks=data$datee)
hist(data$steps, breaks=data$date)
hist(data$steps ~ data$date)
hist(steps)
hist(data$steps)
str(data)
avgSteps <- aggregate(data$steps, list(interval = as.numeric(as.character(data$interval))), FUN = "mean")
summary(avgSteps)
subset(avgSteps, avgSteps$AvgSteps=max(avgSteps$AvgSteps))
?subet
?subset
subset(avgSteps, AvgSteps=max(avgSteps$AvgSteps))
head(avgSteps)
sum(is.na(data))
data
?Weekdays()
?weekdays
data
str(data)
data$Weekday <- factor(weekday(data$date))
data$Weekday <- factor(weekdays(data$date))
data
dir()
dir()
library(knitr)
knit2html("PA1_template.rmd")
if (interactive()) browseURL("PA1_template.html")
